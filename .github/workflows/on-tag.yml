name: Docker build on tag

env:
  DOCKER_CLI_EXPERIMENTAL: enabled
  TAG_FMT: '^refs/tags/(((.?[0-9]+){3,4}))$'

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-*"

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build and push ION images
    steps:
      - name: Login to Docker for building
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Checkout project
        uses: actions/checkout@v2

      - name: Import environment variables
        id: import-env
        shell: bash
        run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Show set environment variables
        run: |
          printf "    TAG: %s\n"  "$TAG"

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Setup Docker buildx action
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Run Docker buildx against tag for ion-bitcoin
        run: |
          docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --cache-to "type=local,dest=/tmp/.buildx-cache" \
          --platform linux/amd64 \
          --tag ${{ secrets.DOCKER_USERNAME }}/ion-bitcoin:$TAG \
          --output "type=registry" \
          --file ./docker/ion-bitcoin/Dockerfile ./

      - name: Run Docker buildx against latest for ion-bitcoin
        run: |
          docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --cache-to "type=local,dest=/tmp/.buildx-cache" \
          --platform linux/amd64 \
          --tag ${{ secrets.DOCKER_USERNAME }}/ion-bitcoin:latest \
          --output "type=registry" \
          --file ./docker/ion-bitcoin/Dockerfile ./

      - name: Run Docker buildx against tag for ion-core
        run: |
          docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --cache-to "type=local,dest=/tmp/.buildx-cache" \
          --platform linux/amd64 \
          --tag ${{ secrets.DOCKER_USERNAME }}/ion-core:$TAG \
          --output "type=registry" \
          --file ./docker/ion-core/Dockerfile ./

      - name: Run Docker buildx against latest for ion-core
        run: |
          docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --cache-to "type=local,dest=/tmp/.buildx-cache" \
          --platform linux/amd64 \
          --tag ${{ secrets.DOCKER_USERNAME }}/ion-core:latest \
          --output "type=registry" \
          --file ./docker/ion-core/Dockerfile ./